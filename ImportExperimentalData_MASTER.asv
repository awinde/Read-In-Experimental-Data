function [] = ImportExperimentalData_MASTER(filename, ROIname)
%   function [] =  ()
%
%   Author: Aaron Winder
%   Affiliation: Engineering Science and Mechanics, Penn State University
%   https://github.com/awinde
%
%   DESCRIPTION:
%
%_______________________________________________________________
%   PARAMETERS:
%
%_______________________________________________________________
%   RETURN:
%
%_______________________________________________________________

%% Parse file timestamp
[~,~,~,fileID] = GetFileInfo(filename);
%% Read in .tdms file
[RawData] = ReadInTDMSFile(filename);

%% Track whisker angle
ImgParams.height = RawData.Info.Whisker_Cam_Height_pix;
ImgParams.width = RawData.Info.Whisker_Cam_Width_pix;
ImgParams.bitDepth = 'uint8';
RawData.Data.WhiskerAngle = WhiskerTracker([fileID '_WhiskerCam.bin'],ImgParams);

%% Read in CBV
ImgParams.height = RawData.Info.CBV_Cam_Height_pix;
ImgParams.width = RawData.Info.CBV_Cam_Width_pix;
ImgParams.bitDepth = 'uint16';
animal = RawData.Info.Animal_ID;
hem = RawData.Info.Imaged_Hemisphere;
[RawData.Data.CBV.(ROIname)] = GetROIIntensity([fileID '_WindowCam.bin'],...
    ROIname, ImgParams, animal, hem);

EvenInds = 2:2:length(RawData.Data.CBV.(ROIname));
OddInds = 1:2:length(RawData.Data.CBV.(ROIname));
Test1 = RawData.Data.CBV.(ROIname)(OddInds);
Test2 = RawData.Data.CBV.(ROIname)(EvenInds);
figure; title([animal '; ' hem]);
subplot(211); 
plot(Test1);
hold on; plot(Test2);
ylabel('Raw Intensity')
subplot(212); plot(Test1/mean(Test1));
hold on; plot(Test2/mean(Test2));
ylabel('Normalized Intensity')
ylim([0.95 1.05])
title(['Noise1: ' num2str(std(Test1/mean(Test1))) '; Noise2: ' num2str(std(Test2/mean(Test2)))])
figure; plot(detrend(Test1/mean(Test1)));
hold on; plot(detrend(Test2/mean(Test2)));